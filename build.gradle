buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}

plugins {
    id 'com.github.johnrengelman.shadow' version '5.2.0'
    id "com.wynprice.cursemaven" version "2.1.5"
    id 'com.matthewprenger.cursegradle' version '1.4.0'
}

apply plugin: 'net.minecraftforge.gradle'

version = "${minecraft_version}-${mod_version}"
group = 'nikita488.zycraft'
archivesBaseName = 'ZYCraft'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

sourceSets.main.resources {
    srcDir 'src/generated/resources'
}

repositories {
    maven { url "https://maven.tterrag.com/" }
}

minecraft {
    mappings channel: 'snapshot', version: "${mappings_version}"
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')
            //property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            //property 'forge.logging.console.level', 'debug'

            mods {
                zycraft {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            //property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            //property 'forge.logging.console.level', 'debug'

            mods {
                zycraft {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            //property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            //property 'forge.logging.console.level', 'debug'
            args '--mod', 'zycraft', '--all', '--output', file('src/generated/resources/'), '--existing', sourceSets.main.resources.srcDirs[0]

            mods {
                zycraft {
                    source sourceSets.main
                }
            }
        }
    }
}

configurations {
    shade
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    def registrate = "com.tterrag.registrate:Registrate:MC${minecraft_version}-${registrate_version}"
    implementation fg.deobf(registrate)
    shade registrate

    implementation fg.deobf("team.chisel.ctm:CTM:MC${minecraft_version}-${ctm_version}")
}

jar {
    classifier = 'slim'

    manifest {
        attributes([
                "Specification-Title": "zycraft",
                "Specification-Vendor": "nikita488",
                "Specification-Version": "1.0",
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"nikita488",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

shadowJar {
    classifier = ''
    configurations = [project.configurations.shade]
    relocate 'com.tterrag.registrate', 'nikita488.zycraft.repack.registrate'
}

reobf {
    shadowJar {}
}

task apiJar(type: Jar) {
    classifier = 'api'
    from sourceSets.main.allSource
    from sourceSets.main.output
    include 'nikita488/zycraft/api/**'
}

build.dependsOn shadowJar
build.dependsOn reobfShadowJar

tasks.curseforge.enabled = project.hasProperty('api_key')

curseforge {
    if (project.hasProperty('api_key')) {
        apiKey = project.api_key
    }

    project {
        id = "${project_id}"
        changelog = file('CHANGELOG.md')
        changelogType = 'markdown'
        releaseType = project.hasProperty('release_type') ? project.release_type : 'beta'
        mainArtifact(shadowJar) {
            displayName = "ZYCraft ${version}"
        }
        addArtifact apiJar
        relations {
            requiredDependency 'ctm'
        }
    }

    options {
        debug = true
    }
}
